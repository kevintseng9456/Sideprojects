//------------------------------------------------------------------------------
// <auto-generated>
//     這個程式碼是由範本產生。
//
//     對這個檔案進行手動變更可能導致您的應用程式產生未預期的行為。
//     如果重新產生程式碼，將會覆寫對這個檔案的手動變更。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Workorder_web
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class APPSolutionsEntities : DbContext
    {
        public APPSolutionsEntities()
            : base("name=APPSolutionsEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<ChallengeName> ChallengeName { get; set; }
        public virtual DbSet<ChallengeTaskTopic> ChallengeTaskTopic { get; set; }
        public virtual DbSet<ChallengeTaskType> ChallengeTaskType { get; set; }
        public virtual DbSet<RequestsUploadChallenge> RequestsUploadChallenge { get; set; }
    
        public virtual ObjectResult<GetRequestsUploadChallenge_Result> GetRequestsUploadChallenge()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetRequestsUploadChallenge_Result>("GetRequestsUploadChallenge");
        }
    
        public virtual ObjectResult<UpdateRequestsUploadChallenge_Result> UpdateRequestsUploadChallenge(string requestsUserID, string challengeName, string uploadPictureVideo1, string uploadPictureVideo2, string challengeMissionExplan, string specialRequirement, Nullable<System.DateTime> uploadTime, string approvalStatus)
        {
            var requestsUserIDParameter = requestsUserID != null ?
                new ObjectParameter("RequestsUserID", requestsUserID) :
                new ObjectParameter("RequestsUserID", typeof(string));
    
            var challengeNameParameter = challengeName != null ?
                new ObjectParameter("ChallengeName", challengeName) :
                new ObjectParameter("ChallengeName", typeof(string));
    
            var uploadPictureVideo1Parameter = uploadPictureVideo1 != null ?
                new ObjectParameter("UploadPictureVideo1", uploadPictureVideo1) :
                new ObjectParameter("UploadPictureVideo1", typeof(string));
    
            var uploadPictureVideo2Parameter = uploadPictureVideo2 != null ?
                new ObjectParameter("UploadPictureVideo2", uploadPictureVideo2) :
                new ObjectParameter("UploadPictureVideo2", typeof(string));
    
            var challengeMissionExplanParameter = challengeMissionExplan != null ?
                new ObjectParameter("ChallengeMissionExplan", challengeMissionExplan) :
                new ObjectParameter("ChallengeMissionExplan", typeof(string));
    
            var specialRequirementParameter = specialRequirement != null ?
                new ObjectParameter("SpecialRequirement", specialRequirement) :
                new ObjectParameter("SpecialRequirement", typeof(string));
    
            var uploadTimeParameter = uploadTime.HasValue ?
                new ObjectParameter("UploadTime", uploadTime) :
                new ObjectParameter("UploadTime", typeof(System.DateTime));
    
            var approvalStatusParameter = approvalStatus != null ?
                new ObjectParameter("ApprovalStatus", approvalStatus) :
                new ObjectParameter("ApprovalStatus", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UpdateRequestsUploadChallenge_Result>("UpdateRequestsUploadChallenge", requestsUserIDParameter, challengeNameParameter, uploadPictureVideo1Parameter, uploadPictureVideo2Parameter, challengeMissionExplanParameter, specialRequirementParameter, uploadTimeParameter, approvalStatusParameter);
        }
    
        public virtual int UploadNewChallenge(string topic, string type, string challengeName)
        {
            var topicParameter = topic != null ?
                new ObjectParameter("Topic", topic) :
                new ObjectParameter("Topic", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var challengeNameParameter = challengeName != null ?
                new ObjectParameter("ChallengeName", challengeName) :
                new ObjectParameter("ChallengeName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UploadNewChallenge", topicParameter, typeParameter, challengeNameParameter);
        }
    }
}
